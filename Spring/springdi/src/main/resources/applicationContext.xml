<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

   <!--spring中的依赖注入
        依赖注入：
            IOC：降低程序间的依赖关系
        依赖关系的管理：
            交给spring维护
        在当前类需要用到的其他类的对象，由spring为我们提供，我们只需要在配置文件中说明
        依赖注入：
            能注入的类型：（3类）
                基本类型和string
                其他的bean类型（在配置文件中或者注解配置过的bean）
                复杂类型/集合类型
            注入方式：（3种）
                构造函数
                set方法
                注解提供
   -->

    <!--构造函数注入
        标签constructor-arg
            type:要注入的数据 的数据类型
            index:要注入的数据给构造函数中指定索引的参数赋值 0->
            name：构造函数中指定名称的参数赋值
            ===========以上三个用于指定给构造函数中哪个参数赋值============
            value:基本类型和string类型的数据
            ref:其他指定的bean类型
         优势：
            获取bean对象时，注入数据是必须的操作，否则对象无法创建成功
         弊端：
            改变了bean对象的实例化方式，某些数据不会用到，也必须注入
    -->
    <bean id="userService" class="com.sjl.service.impl.UserServiceImpl" >
        <constructor-arg type="java.lang.String" name="name" value="test"/>
        <constructor-arg name="age" value= "12"/>
        <constructor-arg name="birthday" ref="now" type="java.util.Date"/>
    </bean>
    <!--配置一个日期对象-->
    <bean id="now" class="java.util.Date"></bean>

    <!--set方式注入  ===》property
        name：set方法名称
        type
        ref
    -->
    <bean id="userService2" class="com.sjl.service.impl.UserServiceImpl2" >
        <property name="name" value="泰斯特"/>
        <property name="age" value="12"/>
        <property name="birthday" ref="now"/>
     </bean>
    <!--复杂数据类型注入
        结构相同，标签可以通用
    -->
    <bean id="userService3" class="com.sjl.service.impl.UserServiceImpl3" >
        <property name="myStr" >
            <array>
                <value>AA</value>
                <value>BB</value>
            </array>
        </property>
        <property name="myList">
            <list>
                <value>CC</value>
                <value>DD</value>
            </list>
        </property>
        <property name="mySet">
            <set>
                <value>EE</value>
                <value>FF</value>
            </set>
        </property>
        <property name="myMap">
            <map>
                <entry key="mapA" value="AAA"></entry>
                <entry key="mapB" >
                    <value >BBB</value>
                </entry>
            </map>
        </property>
        <property name="myProperties">
            <props>
                <prop key="propA">AAA</prop>
                <prop key="propB">BBB</prop>
            </props>
        </property>
    </bean>

</beans>